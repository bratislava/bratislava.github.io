"use strict";(self.webpackChunkbratislava_github_io=self.webpackChunkbratislava_github_io||[]).push([[8767],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),u=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),k=u(n),m=a,d=k["".concat(o,".").concat(m)]||k[m]||c[m]||i;return n?r.createElement(d,s(s({ref:t},p),{},{components:n})):r.createElement(d,s({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=k;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var u=2;u<i;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},5472:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const i={},s="Kubernetes / Lens setup",l={unversionedId:"recipes/kubernetes-lens-setup",id:"recipes/kubernetes-lens-setup",title:"Kubernetes / Lens setup",description:"You can only do this with sufficient access rights - ask Innovations team or Bratislava IT department if connecting to k8s infrastructure is relevant to you.",source:"@site/docs/recipes/kubernetes-lens-setup.md",sourceDirName:"recipes",slug:"/recipes/kubernetes-lens-setup",permalink:"/docs/recipes/kubernetes-lens-setup",draft:!1,editUrl:"https://github.com/bratislava/bratislava.github.io/edit/master/docs/recipes/kubernetes-lens-setup.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Git workflow (committing, submitting & reviewing pull requests)",permalink:"/docs/recipes/git-workflow"},next:{title:"Setup Postgres & tools",permalink:"/docs/recipes/postgres-setup"}},o={},u=[{value:"Install Requirements",id:"install-requirements",level:2},{value:"Login",id:"login",level:2},{value:"Tips &amp; Tricks",id:"tips--tricks",level:2}],p={toc:u};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"kubernetes--lens-setup"},"Kubernetes / Lens setup"),(0,a.kt)("p",null,"You can only do this with sufficient access rights - ask Innovations team or Bratislava IT department if connecting to k8s infrastructure is relevant to you."),(0,a.kt)("h2",{id:"install-requirements"},"Install Requirements"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Install kubectl based ",(0,a.kt)("inlineCode",{parentName:"li"},"brew install kubectl")," or based on you platform you can follow ",(0,a.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/tasks/tools/"},"https://kubernetes.io/docs/tasks/tools/")),(0,a.kt)("li",{parentName:"ul"},"Download and install vsphere tanzu plugin ",(0,a.kt)("a",{parentName:"li",href:"https://k8s.tanzu.bratislava.sk"},"here"),", you need to be connected on cable or through VPN to magistrate network",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Windows - copy ",(0,a.kt)("inlineCode",{parentName:"li"},"kubectl")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"kubectl-vsphere")," to ",(0,a.kt)("inlineCode",{parentName:"li"},"c:/windows/system32")," (needed admin rights) otherwise ",(0,a.kt)("inlineCode",{parentName:"li"},"kubectl vsphere login")," commands will not work"))),(0,a.kt)("li",{parentName:"ul"},"Install ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/bitnami-labs/sealed-secrets#installation"},"kubeseal")," ",(0,a.kt)("inlineCode",{parentName:"li"},"brew install kubeseal")," (",(0,a.kt)("inlineCode",{parentName:"li"},"apt install kubeseal"),"), a tool for generating secrets"),(0,a.kt)("li",{parentName:"ul"},"Download and install Kubernetes ",(0,a.kt)("a",{parentName:"li",href:"https://k8slens.dev"},"Lens"),", a GUI tool for easier management of cluster deployments"),(0,a.kt)("li",{parentName:"ul"},"If you prefer command line environments there is also a tool called ",(0,a.kt)("a",{parentName:"li",href:"https://k9scli.io/"},"k9s"),", which can serve as alternative to Lens.")),(0,a.kt)("h2",{id:"login"},"Login"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"be connected on cable or through VPN to magistrate, where username is your email."),(0,a.kt)("li",{parentName:"ul"},"run kubectl login commands",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"main login \\\n",(0,a.kt)("inlineCode",{parentName:"li"},"kubectl vsphere login --server=10.10.10.1 --insecure-skip-tls-verify -u {{username}}"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"to login through Windows you need to set password ",(0,a.kt)("inlineCode",{parentName:"li"},"export KUBECTL_VSPHERE_PASSWORD={{password}}")))),(0,a.kt)("li",{parentName:"ul"},"logins to clusters",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"kubectl vsphere login --server=10.10.10.1 --insecure-skip-tls-verify --tanzu-kubernetes-cluster-name=tkg-innov-dev -u {{username}}")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"kubectl vsphere login --server=10.10.10.1 --insecure-skip-tls-verify --tanzu-kubernetes-cluster-name=tkg-innov-staging -u {{username}}")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"kubectl vsphere login --server=10.10.10.1 --insecure-skip-tls-verify --tanzu-kubernetes-cluster-name=tkg-innov-prod -u {{username}}")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"kubectl vsphere login --server=10.10.10.1 --insecure-skip-tls-verify --tanzu-kubernetes-cluster-name=tkg-master -u {{username}}"),"\n(optional, you don't need this, its only master cluster)"))))),(0,a.kt)("li",{parentName:"ul"},"open Lens and you should see clusters")),(0,a.kt)("h2",{id:"tips--tricks"},"Tips & Tricks"),(0,a.kt)("p",null,"If you are running reasonable command line environment you can create aliases for these logins."),(0,a.kt)("p",null,"For ","*","nix based command line environment you can add these to your ",(0,a.kt)("inlineCode",{parentName:"p"},"~/.bash_aliases")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"~/.bashrc"),". For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# k8 login aliases\nalias k8dev='kubectl vsphere login --server=10.10.10.1 --insecure-skip-tls-verify --tanzu-kubernetes-cluster-name=tkg-innov-dev -u {{username}} && kubectl config use-context tkg-innov-dev'\n\nalias k8stage='kubectl vsphere login --server=10.10.10.1 --insecure-skip-tls-verify --tanzu-kubernetes-cluster-name=tkg-innov-staging -u {{username}} && kubectl config use-context tkg-innov-staging'\nalias k8staging='k8stage'\n\nalias k8prod='kubectl vsphere login --server=10.10.10.1 --insecure-skip-tls-verify --tanzu-kubernetes-cluster-name=tkg-innov-prod -u {{username}} && kubectl config use-context tkg-innov-prod'\n")),(0,a.kt)("p",null,"These will also set a correct config context to use for our clusters. To apply changes re-log to your console or called (any relevant equivalent to) ",(0,a.kt)("inlineCode",{parentName:"p"},"source ~/.bashrc"),". After this, you can log in just by running ",(0,a.kt)("inlineCode",{parentName:"p"},"k8dev"),". Note, if you don't have ",(0,a.kt)("inlineCode",{parentName:"p"},"$KUBECTL_VSPHERE_PASSWORD")," environment variable set it will ask you for your NT password."))}c.isMDXComponent=!0}}]);