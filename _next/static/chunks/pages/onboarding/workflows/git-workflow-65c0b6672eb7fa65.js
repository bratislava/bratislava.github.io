(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3362],{6279:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/onboarding/workflows/git-workflow",function(){return t(2170)}])},3957:function(e,n,t){"use strict";var a=t(5893);t(7294);let s={logo:(0,a.jsx)("span",{children:"\uD83D\uDCDA Bratislava Documentation"}),project:{link:"https://github.com/bratislava"},docsRepositoryBase:"https://github.com/bratislava/bratislava.github.io",sidebar:{defaultMenuCollapseLevel:0},footer:{text:"Department of Innovation and Technology of the City of Bratislava"},faviconGlyph:"\uD83D\uDCDA"};n.Z=s},2170:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return d.ZP}});var a,s=t(5893),o=t(2720),r=t(3957);t(5513);var i=t(1151);t(5675);var d=t(1235);let c={filePath:"pages/onboarding/workflows/git-workflow.md",route:"/onboarding/workflows/git-workflow",frontMatter:{},pageMap:[{kind:"Meta",data:{index:"Introduction",onboarding:"Onboarding","-- Web development --":{type:"separator"},strapi:"Strapi",graphql:"GraphQL",meilisearch:"Meilisearch","project-specific":"Project specific","-- Others --":{type:"separator"},"deployment-and-infrastructure":"Deployment and Infrastructure",nestjs:"Nestjs",recipes:"Recipes"}},{kind:"Folder",name:"deployment-and-infrastructure",route:"/deployment-and-infrastructure",children:[{kind:"MdxPage",name:"backups",route:"/deployment-and-infrastructure/backups"},{kind:"MdxPage",name:"database-backups",route:"/deployment-and-infrastructure/database-backups"},{kind:"MdxPage",name:"deployment",route:"/deployment-and-infrastructure/deployment"},{kind:"MdxPage",name:"grafana",route:"/deployment-and-infrastructure/grafana"},{kind:"Meta",data:{backups:"Backups","database-backups":"Database Backups",deployment:"Deployment",grafana:"Grafana"}}]},{kind:"MdxPage",name:"graphql",route:"/graphql"},{kind:"MdxPage",name:"index",route:"/",frontMatter:{sidebar_position:1}},{kind:"MdxPage",name:"meilisearch",route:"/meilisearch"},{kind:"Folder",name:"nestjs",route:"/nestjs",children:[{kind:"MdxPage",name:"Authentication",route:"/nestjs/Authentication"},{kind:"MdxPage",name:"CardWebPay",route:"/nestjs/CardWebPay"},{kind:"MdxPage",name:"Controllers",route:"/nestjs/Controllers"},{kind:"MdxPage",name:"Kubernetes",route:"/nestjs/Kubernetes"},{kind:"MdxPage",name:"Logging",route:"/nestjs/Logging"},{kind:"MdxPage",name:"Module",route:"/nestjs/Module"},{kind:"MdxPage",name:"NestJS",route:"/nestjs/NestJS",frontMatter:{sidebar_position:1}},{kind:"MdxPage",name:"OpenAPI",route:"/nestjs/OpenAPI"},{kind:"MdxPage",name:"Prisma",route:"/nestjs/Prisma"},{kind:"MdxPage",name:"ProjectStructure",route:"/nestjs/ProjectStructure"},{kind:"MdxPage",name:"RestApi",route:"/nestjs/RestApi"},{kind:"MdxPage",name:"Sentry",route:"/nestjs/Sentry"},{kind:"MdxPage",name:"Services",route:"/nestjs/Services"},{kind:"MdxPage",name:"Testing",route:"/nestjs/Testing"},{kind:"Meta",data:{Authentication:"Authentication",CardWebPay:"Cardwebpay",Controllers:"Controllers",Kubernetes:"Kubernetes",Logging:"Logging",Module:"Module",NestJS:"Nestjs",OpenAPI:"Openapi",Prisma:"Prisma",ProjectStructure:"Projectstructure",RestApi:"Restapi",Sentry:"Sentry",Services:"Services",Testing:"Testing"}}]},{kind:"Folder",name:"onboarding",route:"/onboarding",children:[{kind:"Folder",name:"setup-and-access",route:"/onboarding/setup-and-access",children:[{kind:"MdxPage",name:"developer-accesses",route:"/onboarding/setup-and-access/developer-accesses"},{kind:"MdxPage",name:"docker-setup",route:"/onboarding/setup-and-access/docker-setup"},{kind:"MdxPage",name:"editor-setup",route:"/onboarding/setup-and-access/editor-setup"},{kind:"MdxPage",name:"kubernetes-lens-setup",route:"/onboarding/setup-and-access/kubernetes-lens-setup"},{kind:"MdxPage",name:"postgres-setup",route:"/onboarding/setup-and-access/postgres-setup"},{kind:"Meta",data:{"developer-accesses":"Developer Accesses","docker-setup":"Docker Setup","editor-setup":"Editor Setup","kubernetes-lens-setup":"Kubernetes Lens Setup","postgres-setup":"Postgres Setup"}}]},{kind:"Folder",name:"workflows",route:"/onboarding/workflows",children:[{kind:"MdxPage",name:"git-workflow",route:"/onboarding/workflows/git-workflow"},{kind:"MdxPage",name:"meetings-syncs-rituals",route:"/onboarding/workflows/meetings-syncs-rituals"},{kind:"Meta",data:{"git-workflow":"Git Workflow","meetings-syncs-rituals":"Meetings Syncs Rituals"}}]}]},{kind:"Folder",name:"project-specific",route:"/project-specific",children:[{kind:"Folder",name:"bratislava.sk",route:"/project-specific/bratislava.sk",children:[{kind:"MdxPage",name:"add-new-component-to-sections",route:"/project-specific/bratislava.sk/add-new-component-to-sections"},{kind:"MdxPage",name:"colors-and-themes",route:"/project-specific/bratislava.sk/colors-and-themes"},{kind:"MdxPage",name:"forms-general",route:"/project-specific/bratislava.sk/forms-general"},{kind:"MdxPage",name:"forms-uischema",route:"/project-specific/bratislava.sk/forms-uischema"},{kind:"MdxPage",name:"forms-upload-file",route:"/project-specific/bratislava.sk/forms-upload-file"},{kind:"MdxPage",name:"meilisearch-setup",route:"/project-specific/bratislava.sk/meilisearch-setup"},{kind:"MdxPage",name:"react-component-structure",route:"/project-specific/bratislava.sk/react-component-structure"},{kind:"Meta",data:{"add-new-component-to-sections":"Add New Component to Sections","colors-and-themes":"Colors and Themes","forms-general":"Forms General","forms-uischema":"Forms Uischema","forms-upload-file":"Forms Upload File","meilisearch-setup":"Meilisearch Setup","react-component-structure":"React Component Structure"}}]}]},{kind:"Folder",name:"recipes",route:"/recipes",children:[{kind:"Folder",name:"alerting",route:"/recipes/alerting",children:[{kind:"MdxPage",name:"contact-point",route:"/recipes/alerting/contact-point"},{kind:"MdxPage",name:"endpoint_alert",route:"/recipes/alerting/endpoint_alert"},{kind:"MdxPage",name:"grafana_alerting",route:"/recipes/alerting/grafana_alerting",frontMatter:{sidebar_position:1}},{kind:"MdxPage",name:"log_alert",route:"/recipes/alerting/log_alert"},{kind:"MdxPage",name:"resource_alert",route:"/recipes/alerting/resource_alert"},{kind:"Meta",data:{"contact-point":"Contact Point",endpoint_alert:"Endpoint Alert",grafana_alerting:"Grafana Alerting",log_alert:"Log Alert",resource_alert:"Resource Alert"}}]},{kind:"MdxPage",name:"connecting-to-kubernetes",route:"/recipes/connecting-to-kubernetes"},{kind:"Folder",name:"database-manipulation",route:"/recipes/database-manipulation",children:[{kind:"MdxPage",name:"load-strapi-db-in-local-dev",route:"/recipes/database-manipulation/load-strapi-db-in-local-dev"},{kind:"MdxPage",name:"sync-strapi-db-to-different-env",route:"/recipes/database-manipulation/sync-strapi-db-to-different-env"},{kind:"Meta",data:{"load-strapi-db-in-local-dev":"Load Strapi Db in Local Dev","sync-strapi-db-to-different-env":"Sync Strapi Db to Different Env"}}]},{kind:"MdxPage",name:"debug-cluster-connectivity",route:"/recipes/debug-cluster-connectivity"},{kind:"MdxPage",name:"env-vars-and-secrets",route:"/recipes/env-vars-and-secrets"},{kind:"MdxPage",name:"production-deployment-checklist",route:"/recipes/production-deployment-checklist"},{kind:"MdxPage",name:"sentry-setup",route:"/recipes/sentry-setup"},{kind:"MdxPage",name:"wsl",route:"/recipes/wsl"},{kind:"Meta",data:{alerting:"Alerting","connecting-to-kubernetes":"Connecting to Kubernetes","database-manipulation":"Database Manipulation","debug-cluster-connectivity":"Debug Cluster Connectivity","env-vars-and-secrets":"Env Vars and Secrets","production-deployment-checklist":"Production Deployment Checklist","sentry-setup":"Sentry Setup",wsl:"Wsl"}}]},{kind:"Folder",name:"strapi",route:"/strapi",children:[{kind:"MdxPage",name:"best-practices",route:"/strapi/best-practices"},{kind:"MdxPage",name:"general-concepts",route:"/strapi/general-concepts"},{kind:"MdxPage",name:"setup",route:"/strapi/setup"},{kind:"Meta",data:{"best-practices":"Best Practices","general-concepts":"General Concepts",setup:"Setup"}}]}],headings:[{type:"heading",depth:1,children:[{type:"text",value:"Git workflow (committing, submitting & reviewing pull requests)",position:{start:{line:1,column:3,offset:2},end:{line:1,column:66,offset:65}}}],position:{start:{line:1,column:1,offset:0},end:{line:1,column:66,offset:65}},value:"Git workflow (committing, submitting & reviewing pull requests)"},{type:"heading",depth:2,children:[{type:"text",value:"Branches and environments",position:{start:{line:11,column:4,offset:560},end:{line:11,column:29,offset:585}}}],position:{start:{line:11,column:1,offset:557},end:{line:11,column:29,offset:585}},value:"Branches and environments"},{type:"heading",depth:2,children:[{type:"text",value:"Commit message, branch and PR name formats",position:{start:{line:17,column:4,offset:1070},end:{line:17,column:46,offset:1112}}}],position:{start:{line:17,column:1,offset:1067},end:{line:17,column:46,offset:1112}},value:"Commit message, branch and PR name formats"},{type:"heading",depth:2,children:[{type:"text",value:"Labels & Assignees",position:{start:{line:25,column:4,offset:1602},end:{line:25,column:22,offset:1620}}}],position:{start:{line:25,column:1,offset:1599},end:{line:25,column:22,offset:1620}},value:"Labels & Assignees"},{type:"heading",depth:2,children:[{type:"text",value:"Resolving conversations",position:{start:{line:31,column:4,offset:2631},end:{line:31,column:27,offset:2654}}}],position:{start:{line:31,column:1,offset:2628},end:{line:31,column:27,offset:2654}},value:"Resolving conversations"},{type:"heading",depth:2,children:[{type:"text",value:"Merging & Rebasing",position:{start:{line:35,column:4,offset:2920},end:{line:35,column:22,offset:2938}}}],position:{start:{line:35,column:1,offset:2917},end:{line:35,column:22,offset:2938}},value:"Merging & Rebasing"}],flexsearch:{codeblocks:!0}};globalThis.__nextra_internal__={pageMap:c.pageMap,route:c.route};let l="Git workflow (committing, submitting & reviewing pull requests)";function u(e){let n=Object.assign({h1:"h1",p:"p",a:"a",div:"div",pre:"pre",code:"code",span:"span",h2:"h2",strong:"strong",em:"em"},(0,i.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{children:"Git workflow (committing, submitting & reviewing pull requests)"}),"\n",(0,s.jsxs)(n.p,{children:["To contribute to our project you will need a account on ",(0,s.jsx)(n.a,{href:"https://github.com/",children:"GitHub"})," and ",(0,s.jsx)(n.a,{href:"https://git-scm.com/",children:"git"}),". Some of the systems (some of the *nix and Mac) already come with git pre-installed, which you can check by running"]}),"\n",(0,s.jsx)(n.div,{"data-rehype-pretty-code-fragment":"",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{"data-language":"bash","data-theme":"default",children:(0,s.jsx)(n.span,{className:"line",children:(0,s.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"git --version"})})})})}),"\n",(0,s.jsxs)(n.p,{children:["If you don't have it installed you can follow these guides for ",(0,s.jsx)(n.a,{href:"https://git-scm.com/download/linux",children:"Linux/Unix"})," or ",(0,s.jsx)(n.a,{href:"https://git-scm.com/download/mac",children:"Mac"}),". For windows, you can use ",(0,s.jsx)(n.a,{href:"https://gitforwindows.org/",children:"gitforwindows"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"branches-and-environments",children:"Branches and environments"}),"\n",(0,s.jsxs)(n.p,{children:["We use a single trunk (",(0,s.jsx)(n.code,{children:"master"}),") from which feature branches are created. Master is what is regularly deployed to staging environment. Production builds are created for tagged commits, usually from master, but if a quick production fix is needed, the process is to branch-off at the last tagged commit and create new production tags on this new branch."]}),"\n",(0,s.jsxs)(n.p,{children:["There is no ",(0,s.jsx)(n.code,{children:"develop"})," or ",(0,s.jsx)(n.code,{children:"production"})," branch, and there should rarely be need for a long-running branch other than ",(0,s.jsx)(n.code,{children:"master"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"commit-message-branch-and-pr-name-formats",children:"Commit message, branch and PR name formats"}),"\n",(0,s.jsxs)(n.p,{children:["Preferred way of branch naming is ",(0,s.jsx)(n.code,{children:"{issue-id}/{2-3 word summary}"}),", for example ",(0,s.jsx)(n.code,{children:"MKB-460/form-captcha"}),"."]}),"\n",(0,s.jsx)(n.p,{children:'Titles of pull requests should begin with issue id and one sentence description, for example "MKB-460: Add Google Recapcha to page forms".'}),"\n",(0,s.jsxs)(n.p,{children:["For commit messages and pull request description please follow the conventions the way they are written here ",(0,s.jsx)(n.a,{href:"https://namingconvention.org/git/",children:"https://namingconvention.org/git/"}),". If multiple options are provided (i.e. for commit message formatting), then all of them are ok."]}),"\n",(0,s.jsx)(n.h2,{id:"labels--assignees",children:"Labels & Assignees"}),"\n",(0,s.jsxs)(n.p,{children:["We are using labels and assignees to navigate easily through the open pull requests. Labels should be self explanatory. ",(0,s.jsx)(n.strong,{children:"Assignee should always be the person whose action is required to move the PR forward."})," That is, if the PR is waiting for review by someone, the reviewer should be an assignee. If a code change is expected by a person, or a question needs to be answered, assign the PR to the person making the change or capable of answering. This way you can easily see which PRs are waiting for your actions, request assistance, or know who should you bother if your PR is stuck \uD83D\uDE42."]}),"\n",(0,s.jsxs)(n.p,{children:["The usual PR workflow involves assigning the PR between a selected reviewer and the author, while also swapping the ",(0,s.jsx)(n.code,{children:"needs work"})," and ",(0,s.jsx)(n.code,{children:"needs review"})," labels depending on the current state. Once the reviewer is satisfied, they'll assign a ",(0,s.jsx)(n.code,{children:"fix & ship"})," label, leaving it up to the author to merge at his or hers convenience, optionally fixing some minor issues before doing so (without the need for a further review)."]}),"\n",(0,s.jsx)(n.h2,{id:"resolving-conversations",children:"Resolving conversations"}),"\n",(0,s.jsx)(n.p,{children:"It is helpful to resolve (github) conversations you have started if you feel the topic has been answered. This goes particularly for reviewers doing multiple passes on a single PR - try to resolve what you can before adding more comments on a subsequent pass."}),"\n",(0,s.jsx)(n.h2,{id:"merging--rebasing",children:"Merging & Rebasing"}),"\n",(0,s.jsxs)(n.p,{children:["Squash & merge into master. Liberal use of ",(0,s.jsx)(n.code,{children:"rebase"})," for cleaning up your own feature branches (mainly if you tend to create and push work-in-progress commits) is encouraged. If your local commits are ",(0,s.jsx)(n.em,{children:"way"})," out of control, you might be required to do so before your PR is accepted (but this happens rarely)."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Still, be careful"})," if someone else branches off one of your feature branches - to make his life easier, you should avoid rebasing, if possible, past the point they've branched at - at least until your work is ready to become a part of master."]})]})}function p(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}c.title="string"==typeof l&&l||"Git Workflow";let g=e=>(0,s.jsx)(o.mK.Provider,{value:e,children:(0,s.jsx)(p,{})});(a=globalThis).__nextra_pageContext__||(a.__nextra_pageContext__=Object.create(null)),globalThis.__nextra_pageContext__["/onboarding/workflows/git-workflow"]={Content:g,pageOpts:c,themeConfig:r.Z}}},function(e){e.O(0,[9774,5860,2888,179],function(){return e(e.s=6279)}),_N_E=e.O()}]);